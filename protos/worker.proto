syntax="proto3";

package worker;

// Interface exported by the worker node.
service Worker {
    rpc IsNodePresent(NodeId) returns (IsPresent);
    rpc UpdateDjikstra(stream RequestDjikstra) returns (stream ResponseDjikstra);
}

message NodeId {
    uint64 node_id = 1;
}

message IsPresent {
    bool present = 1;
}

message RequestDjikstra {
    message NewMyElement {
        uint64 node_id = 1;
        uint64 shortest_path_len = 2;
    }

    message SmallestForeginElement {
        uint64 shortest_path_len = 1;
    }

    // First message in the stream must be `request_id`. Message `new_my` may
    // appear multiple times in the stream. Last message must be
    // `smallest_foreign`.
    oneof RequestType {
        uint32 request_id = 1;
        NewMyElement new_my_el = 2;
        SmallestForeginElement smallest_foreign_el = 3;
    }
}

message ResponseDjikstra {
    message Success {
        uint64 node_id = 1;
        uint64 shortest_path_len = 2;
    }

    message NewForeignElement {
        uint64 node_id = 1;
        uint32 worker_id = 2;
        uint64 shortest_path_len = 3;
    }

    message SmallestMyElement {
        uint64 shortest_path_len = 1;
    }

    // One success, single `success` message is sent.
    // Otherwise, message `new_foreign` may appear multiple times in the stream
    // and last message must be `smallest_my`.
    oneof ResponseType {
        Success success = 1;
        NewForeignElement new_foreign_el = 2;
        SmallestMyElement smallest_my_el = 3;
    }
}

