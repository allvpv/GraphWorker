# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import manager_pb2 as manager__pb2


class ManagerServiceStub(object):
    """Interface exported by the parser/manager node.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterWorker = channel.unary_unary(
                '/manager.ManagerService/RegisterWorker',
                request_serializer=manager__pb2.WorkerProperties.SerializeToString,
                response_deserializer=manager__pb2.WorkerMetadata.FromString,
                )
        self.GetGraphFragment = channel.unary_stream(
                '/manager.ManagerService/GetGraphFragment',
                request_serializer=manager__pb2.WorkerMetadata.SerializeToString,
                response_deserializer=manager__pb2.GraphPiece.FromString,
                )
        self.GetWorkersList = channel.unary_unary(
                '/manager.ManagerService/GetWorkersList',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=manager__pb2.WorkersList.FromString,
                )


class ManagerServiceServicer(object):
    """Interface exported by the parser/manager node.
    """

    def RegisterWorker(self, request, context):
        """Methods for use by workers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGraphFragment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkersList(self, request, context):
        """Methods for use by executers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterWorker,
                    request_deserializer=manager__pb2.WorkerProperties.FromString,
                    response_serializer=manager__pb2.WorkerMetadata.SerializeToString,
            ),
            'GetGraphFragment': grpc.unary_stream_rpc_method_handler(
                    servicer.GetGraphFragment,
                    request_deserializer=manager__pb2.WorkerMetadata.FromString,
                    response_serializer=manager__pb2.GraphPiece.SerializeToString,
            ),
            'GetWorkersList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkersList,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=manager__pb2.WorkersList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'manager.ManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ManagerService(object):
    """Interface exported by the parser/manager node.
    """

    @staticmethod
    def RegisterWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manager.ManagerService/RegisterWorker',
            manager__pb2.WorkerProperties.SerializeToString,
            manager__pb2.WorkerMetadata.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGraphFragment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/manager.ManagerService/GetGraphFragment',
            manager__pb2.WorkerMetadata.SerializeToString,
            manager__pb2.GraphPiece.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWorkersList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manager.ManagerService/GetWorkersList',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            manager__pb2.WorkersList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
